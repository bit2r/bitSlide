---
output: html_document
editor_options: 
  chunk_output_type: console
---
# 데이터 문해력이라고 쓰고 <br> 데이터 활용역량이라고 읽는다.

## 러시아 월드컵 (독일전)

<br>

![](img/public/worldcup.gif)

::: aside
[러시아 월드컵(2018) - 한국 vs 독일](https://statkclee.github.io/viz/viz-worldcup-germany.html)
:::

## 1854년 런던 코로나19 {.smaller}

::: panel-tabset
### 팬데믹

![](img/public/1024px-Punch-A_Court_for_King_Cholera.png){fig-align="center" width="627"}

### 데이터-1

![](img/public/snow-cholera-map.jpg){width="533"}

### 데이터-2

```{r john-snow-hist-data, out.width="100%"}
library(HistData)
library(ggmap)
library(maptools)
library(leaflet)
library(sp)
library(rgdal)
library(reactable)

data(Snow.deaths); data(Snow.pumps); data(Snow.streets); data(Snow.polygons)

Snow.deaths %>% 
  reactable(
    defaultPageSize = 7, minRows = 7, searchable = TRUE,
    columns = list(
      case = colDef(name = "사망자 번호"),
      x = colDef(name = "경도"),
      y = colDef(name = "위도")
    )
  )
```

### 탐정

![](img/public/Pump_Handle_-_John_Snow_.jpg){fig-align="center" width="375"}

### 시각화(1854)

```{r london-map}
#| eval: false
ggmap::register_google(key = Sys.getenv("GOOGLE_MAP_API_KEY"), write = TRUE)
london_map <- get_map(c(-.137,51.513), zoom=17)
london <- ggmap(london_map) 
SnowMap(main ="스노우가 작성한 콜레라 지도", density=TRUE)
```

### 시각화(2022)

```{r john-snow-hist-data-now, out.width="100%"}
#| eval: false
# download.file("http://rtwilson.com/downloads/SnowGIS_SHP.zip",
#               dest="data/SnowGIS.zip", mode="wb")

deaths <- readShapePoints(glue::glue("{here::here()}/data/SnowGIS_SHP/Cholera_Deaths") )
df_deaths <- data.frame(deaths@coords)

coordinates(df_deaths)=~coords.x1+coords.x2

proj4string(df_deaths)=CRS("+init=epsg:27700") 
df_deaths = spTransform(df_deaths,CRS("+proj=longlat +datum=WGS84"))
df=data.frame(df_deaths@coords)


df1 <- data.frame(df$coords.x1, df$coords.x2)

Pump_area <- readShapePoints(glue::glue("{here::here()}/data/SnowGIS_SHP/Pumps") )
pump_area <- data.frame(Pump_area@coords)

coordinates(pump_area)=~coords.x1+coords.x2

proj4string(pump_area)=CRS("+init=epsg:27700") 
pump_area = spTransform(pump_area,CRS("+proj=longlat +datum=WGS84"))
pa=data.frame(pump_area@coords)


pa1 <- data.frame(pa$coords.x1, pa$coords.x2)

df2 <- cbind(Parameter = "Deaths", df1)
colnames(df2) <- c("Parameter", "coords.x1", "coords.x2")

pa2 <- cbind(Parameter = "Pump", pa1)
colnames(pa2) <- c("Parameter", "coords.x1", "coords.x2")
tot <- rbind(df2, pa2)

london + geom_point(mapping=aes(x=coords.x1, y=coords.x2, col=Parameter,size=Parameter , shape=Parameter), data=tot) + scale_size_discrete(range = c(2, 4)) + 
  labs(title = " 영국 런던 펌부와 콜레라 발병으로 인한 사망자 매핑")
```

### 메타버스

<iframe width="600" height="500" src="https://www.youtube.com/embed/B_UsX5vfPJU" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen>

</iframe>

::: aside
-   [1854 Broad Street cholera outbreak](https://en.wikipedia.org/wiki/1854_Broad_Street_cholera_outbreak)
:::
:::

## 지진해일 대피소

![](img/public/earthquake.png){fig-align="center" width="700"}

::: aside
[xwMOOC (2018-01-17), "지진해일 대피소 - crosstalk"](https://statkclee.github.io/viz/viz-earthquake-shelter.html)
:::

## 손씻기 역사 {.smaller}

::: panel-tabset
### 출생사망

![](img/public/hand-washing.jpeg)

### 데이터

```{r data-science-hand-washing}
# 0. 환경설정 -----
library(infer)
library(tidyverse)
library(extrafont)
loadfonts()
library(ggthemes)
library(DT)
library(viridis)
library(reactable)

# 1. 데이터  -----
# download.file(url="https://raw.githubusercontent.com/statkclee/statistics/gh-pages/data/yearly_deaths_by_clinic.csv", destfile = "data/yearly_deaths_by_clinic.csv")
# download.file(url="https://raw.githubusercontent.com/statkclee/statistics/gh-pages/data/monthly_deaths.csv", destfile = "data/monthly_deaths.csv")

year_df <- read_csv(glue::glue("{here::here()}/data/yearly_deaths_by_clinic.csv"))
month_df <- read_csv(glue::glue("{here::here()}/data/monthly_deaths.csv"))
```

::: columns
::: column
**연도별**

```{r}
library(gtExtras)
library(gt)

year_df %>% 
  gt::gt() %>% 
    gt_theme_538() %>% 
    cols_align(align = "center") %>% 
    fmt_number(columns = births, decimals = 0)
```
:::

::: column
**월별**

```{r}
month_df %>% 
  reactable(
    defaultPageSize = 5, minRows = 5,  filterable = TRUE, showPagination = TRUE,
    columns = list(
      date = colDef(name = "연도", align = "center"),
      births = colDef(name = "출생", align = "center", format = colFormat(separators = TRUE ) ),
      deaths = colDef(name = "사망", align = "center", format = colFormat(separators = TRUE ) )
    )
  )
```
:::
:::

### 병원별 비교

```{r data-science-hand-washing-viz}

year_df %>% 
  pivot_longer(cols = births:deaths) %>% 
  mutate(clinic = factor(clinic, levels = c("clinic 1", "clinic 2"))) %>%
  mutate(name = ifelse(name == "births", "출산", "사망")) %>% 
  mutate(name = factor(name, levels = c("출산", "사망"))) %>% 
  mutate(clinic = ifelse(str_detect(clinic, "clinic 1"), "병원1", "병원2")) %>% 
  ggplot(aes(x=year, y=value, color=clinic, group = clinic)) +
    geom_point(size = 2) +
    geom_line() +
    facet_wrap( ~ name, scales="free") +
    labs(x="", y="산모숫자",
         color = "병원: ") +
    scale_y_continuous(labels = scales::comma) +
    # scale_color_manual(values = c("births" = "blue",
    #                               "deaths" = "red")) +
    scale_color_manual(values = c("black", "blue")) +
    theme_bw(base_family = "NanumGothic") +
    theme(legend.position = "top") 

```

### 시간별 비교

```{r data-science-hand-washing-before-after}
extrafont::loadfonts()
# 3. 손씻기 실험 결과 -----
month_df %>% 
  mutate(손씻기_전후 = ifelse(date >= lubridate::ymd('1847-06-01'), "깨끗한 손", "더러운 손")) %>% 
  gather(출생사망, 산모숫자, -date, -손씻기_전후) %>% 
  mutate(출생사망 = ifelse(str_detect(출생사망, "birth"), "출산", "사망")) %>% 
  ggplot(aes(x=date, y=산모숫자, group=출생사망, color=손씻기_전후)) +
    geom_point() +
    geom_line() +
    geom_vline(xintercept = lubridate::ymd('1847-06-01'), color="green", size=1) +
    facet_wrap( ~ 출생사망, scales="fixed") +
    labs(x="", y="산모숫자") +
    scale_y_continuous(labels = scales::comma) +
    theme_bw(base_family = "마루부리") +
    theme(legend.position = "top")

```

### 사망율 분포

```{r handwashing-rate}
# 4. 통계적 유의성 검정 -----
## 4.1. 데이터 -----
month_test <- month_df %>% 
  mutate(손씻기_전후 = ifelse(date >= as.Date('1847-06-01'), "깨끗한 손", "더러운 손")) %>% 
  mutate(산모_사망률 = deaths / births)

## 4.2. 시각화 -----
ggplot(data = month_test, mapping = aes(x = 산모_사망률, fill=손씻기_전후)) +
  geom_density(alpha = 0.7) +
  scale_x_continuous(labels = scales::percent) +
  scale_fill_viridis(discrete = TRUE) +
  theme_bw(base_family="NanumGothic") +
  labs(title="손씻기 전후 산모사망률 비교",
       x="산모사망률", y="빈도수", fill="손씻기 전후")
```

### 통계검정

<br> <br>

```{r data-science-hand-washing-testing-number, results="asis"}
## 4.3. 전통적인 통계검정 -----
library(broom)
t.test( 산모_사망률 ~ 손씻기_전후, data = month_test) %>%
  tidy() %>%
  select(!contains("estimate")) %>%
  knitr::kable()

```

::: aside
-   [이광춘, "손씻기 그리고 통계 - 제멜바이스"](http://statkclee.github.io/statistics/stat-hand-washing.html)
:::
:::

## 정규분포 {.smaller}

::: panel-tabset
### 골턴 보드

![](img/public/galton-board.png)

### 동영상

<iframe width="560" height="315" src="https://www.youtube.com/embed/EvHiee7gs9Y" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen>

</iframe>

### 모의실험

<iframe width="560" height="315" src="img/public/yihui-animation.mp4" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen data-external="1">

</iframe>

### 실제사례 - 신장

```{r}
#| eval: false
library(tidyverse)
library(readxl)
extrafont::loadfonts()

body_sheets <- excel_sheets("data/육군 신체측정정보.xlsx")

body_list <- list()

for(i in 1:length(body_sheets)) {
  cat(body_sheets[i], "\n")
  body_list[[i]] <- read_excel("data/육군 신체측정정보.xlsx", sheet = body_sheets[i])
}

body_raw <- map_df(body_list, rbind)

height_tbl <- body_raw %>% 
  janitor::clean_names(ascii = FALSE) %>% 
  select(신장 = 신장_센티미터) %>% 
  mutate(신장 = parse_number(신장))

army_height_g <- height_tbl %>% 
  ggplot(aes(x = 신장)) +
    geom_histogram(aes(y=..density..)) +
    geom_density(color = "red") +
    theme_bw() +
    labs(x = "신장(센티미터)",
         y = "밀도",
         title = "육군 신체측정정보 - 신장(키)",
         subtitle = "2022년 4월 23일 기준")
 
ggsave( glue::glue("img/public/육군_신장.png") , 
        army_height_g,
        device = ragg::agg_png, 
        width = 297, height = 210, units = "mm", res = 600) 
```

![](img/public/%EC%9C%A1%EA%B5%B0_%EC%8B%A0%EC%9E%A5.png){fig-align="center" width="707"}

### 미국 대학생 신장

![](img/public/normal-in-action.png)
:::

::: aside
-   [육군 신체측정정보 : 육군 신체측정 데이터(수시 업데이터)](https://opendata.mnd.go.kr/openinf/sheetview2.jsp?infId=OA-9425)
:::

## 나폴레옹 러시아 침공 {.smaller}

::: panel-tabset
### 나폴레옹

![](img/public/about_napoleon.png)

### 미나르 지도

![](img/public/Minard.png)

### 실제 침공

![](img/public/minard-actual-map.png)

### 데이터

::: columns
::: column
**생존병사 수**

```{r minard-russian-table}
library(HistData)
library(reactable)

data(Minard.troops) 
data(Minard.cities)
data(Minard.temp)

Minard.troops %>% 
  select(-group) %>% 
  reactable(
    defaultPageSize = 5, minRows = 5,  filterable = FALSE, showPagination = TRUE,
    columns = list(
      long = colDef(name = "위도", align = "center"),
      lat = colDef(name = "경도", align = "center" ),
      survivors = colDef(name = "생존병사수", align = "center", format = colFormat(separators = TRUE ) ),
      direction = colDef(name = "진격방향", align = "center")
    )
  )  
```
:::

::: column
**후퇴 기온**

```{r minard-russian-city}

data(Minard.temp)

Minard.temp %>% 
  reactable(
    defaultPageSize = 5, minRows = 5,  filterable = FALSE, showPagination = TRUE,
    columns = list(
      long = colDef(name = "위도", align = "center"),
      temp = colDef(name = "기온", align = "center" ),
      days = colDef(name = "후퇴날짜", align = "center"),
      date = colDef(name = "관측날짜", align = "center")
    )
  )  
```
:::
:::

### 시각화

```{r minard-russian-invasion, eval = FALSE}
library(HistData)

data(Minard.troops)
data(Minard.cities)
data(Minard.temp)

source("../../../swc/sungnam-report/R/theme_election.R", encoding = "UTF-8")

## Not run: 
#' ## Load required packages
require(ggplot2)
require(scales)
require(gridExtra)

levels(Minard.cities$city) <- c("Bobr", "Chjat", "Dorogobouge", "Gloubokoe", "Kowno", "Malo-Jarosewii", 
                                "Minsk", "Mohilow", "Moiodexno", "Mojaisk", "모스코바", "Orscha", 
                                "Polotzk", "Smolensk", "Smorgoni", "Studienska", "Tarantino", 
                                "Wilna", "Witebsk", "Wixma")

#' ## plot path of troops, and another layer for city names
plot_troops <- ggplot(Minard.troops, aes(long, lat)) +
	geom_path(aes(size = survivors, colour = direction, group = group),
               lineend = "round", linejoin = "round")
plot_cities <- geom_text(aes(label = city), size = 4, data = Minard.cities)
 
#' ## Combine these, and add scale information, labels, etc.
#' Set the x-axis limits for longitude explicitly, to coincide with those for temperature

breaks <- c(1, 2, 3) * 10^5 
plot_minard <- plot_troops + plot_cities +
 	scale_size("생존병사수", range = c(1, 10), 
 	            breaks = breaks, labels = scales::comma(breaks)) +
  scale_color_manual("진격방향", 
                     values = c("grey50", "red"), 
                     labels=c("진격", "후퇴")) +
  coord_cartesian(xlim = c(24, 38)) +
  labs(x = NULL,
       y = "경도",
       title = "나폴레옹 러시아 침공",
       subtitle = "1812년 6월 24일 ~ 1813년 1월 5일") +
  theme_election() +
  theme(legend.position=c(.8, .2), legend.box="horizontal")
 
library(ggrepel)
#' ## plot temperature vs. longitude, with labels for dates
plot_temp <- Minard.temp %>% 
  mutate(date = case_when(str_detect(date, "Oct") ~ str_replace(date, "Oct", "10월"),
                          str_detect(date, "Nov") ~ str_replace(date, "Nov", "11월"),
                          str_detect(date, "Dec") ~ str_replace(date, "Dec", "12월"),
                           TRUE ~ "미상")) %>% 
  mutate(date = glue::glue("{date}일")) %>% 
  mutate(date = ifelse(date == "미상일", "미상", date)) %>% 
  ggplot(aes(long, temp)) +
  	geom_path(color="grey", size=1.5) +
  	geom_point(size=2) +
  	geom_text_repel(aes(label=glue::glue("{date}")) ) +
  	xlab("위도") + ylab("기온") +
  	coord_cartesian(xlim = c(24, 38)) + 
  	theme_bw()
	
#' Combine the two plots into one
minard_g <- grid.arrange(plot_minard, plot_temp, nrow=2, heights=c(3,1))

ggsave( glue::glue("fig/나폴레옹_러시아.png") , 
        minard_g,
        device = ragg::agg_png, 
        width = 297, height = 210, units = "mm", res = 600)
```

![](img/public/%EB%82%98%ED%8F%B4%EB%A0%88%EC%98%B9_%EB%9F%AC%EC%8B%9C%EC%95%84.png){fig-align="center" width="707"}
:::

::: aside
[Re-Visions of Minard](https://www.datavis.ca/gallery/re-minard.php)
:::

## 나이팅게일 - 백의천사 {.smaller}

::: panel-tabset
### 나이팅게일

![](img/public/nightingale-overview.png){fig-align="center" width="859"}

### 크림전쟁

![](img/public/nightingale-war.png){fig-align="center" width="1129"}

### 데이터

```{r nightingale-table}
library(HistData)
library(reactable)

HistData::Nightingale %>% 
  as_tibble() %>% 
  set_names(c("일자", "월", "년", "군인수", "질병사망", "부상사망", "기타사망", "질병사망율", "부상사망율", "기타사망율")) %>% 
  select(-월, -년) %>% 
  mutate(질병사망율 = 질병사망율 / 100,
         부상사망율 = 부상사망율 / 100,
         기타사망율 = 기타사망율 / 100) %>% 
  reactable(
    defaultPageSize = 5, minRows = 5,  filterable = TRUE, showPagination = TRUE,
    columns = list(
      군인수 = colDef(align = "center", format = colFormat(separators = TRUE ) ),
      질병사망 = colDef(align = "center", format = colFormat(separators = TRUE ) ),
      부상사망 = colDef(align = "center", format = colFormat(separators = TRUE ) ),
      기타사망   = colDef(align = "center", format = colFormat(separators = TRUE ) ),
      질병사망율 = colDef(align = "center", format = colFormat(percent    = TRUE ) ),      
      부상사망율 = colDef(align = "center", format = colFormat(percent    = TRUE ) ),      
      기타사망율 = colDef(align = "center", format = colFormat(percent    = TRUE ) )
    )
  )  

```

### 시각화

```{r nightingale-viz, eval = FALSE}
#============================================================================
#  R codes for recreating Rose Diagram as designed by Florence Nightingale
#============================================================================
# https://rpubs.com/chidungkt/819554

# Clear our R environment: 
rm(list = ls())

# Load Nightingale data set: 
data("Nightingale", package = "HistData")

# Description about the data set: 
# ?HistData::Nightingale

# Load some R packages: 
library(tidyverse) # for data manipulation and visualization.
library(stringr) # for text prcessing.
library(lubridate) # for date-time processing.
library(hrbrthemes) # For using black theme.

# Convert to long form and processing for some columns: 

Nightingale %>% 
  select(Date, Disease.rate, Wounds.rate, Other.rate) %>% 
  gather(Cause, Deaths, -Date) %>% 
  mutate(Cause = str_replace_all(Cause, "\\.rate", ""), Regime = rep(c("Before", "After"), time = 3, each = 12)) %>% 
  mutate(Regime = factor(Regime, levels = c("Before", "After"))) %>%  
  mutate(mo = month(Date, label = TRUE, abbr = TRUE)) -> longForm_data

# Select Ubuntu Condensed font for ploting: 

# Recreate Rose Diagram: 
source("../../../swc/sungnam-report/R/theme_election.R", encoding = "UTF-8")  
my_font <- "MaruBuri"


nightingale_g <- longForm_data %>% 
  mutate(Regime = ifelse(Regime == "Before", "처치 전", "처치 후")) %>% 
  mutate(Cause = case_when(str_detect(Cause, "Disease") ~ "질병사망자",
                           str_detect(Cause, "Wounds")  ~ "부상사망자",
                           TRUE  ~ "기타사망자")) %>% 
  mutate(Cause = factor(Cause, levels = c("질병사망자", "부상사망자", "기타사망자"))) %>% 
  ggplot(aes(x = mo, y = Deaths, fill = Cause)) +
    geom_col(color = "grey20") + 
    theme_modern_rc(base_family = my_font, subtitle_family = my_font) + 
    scale_fill_manual(values = c("firebrick", "orange", "#365181"), name = "") +
    scale_y_sqrt() +
    facet_wrap(~ Regime) + 
    coord_equal(ratio = 1) +  
    coord_polar() +
    labs(title = "크림전쟁 사망원인", 
         subtitle = "나이팅게일이 설계한 그래프", 
         caption = "데이터출처: 크림전쟁 원일별 사망자") + 
    theme(legend.position = "top") + 
    theme(text = element_text(family = my_font, size = 14)) + 
    theme(axis.title.y = element_blank()) + 
    theme(axis.title.x = element_blank()) + 
    theme(axis.text.y = element_blank()) + 
    theme(axis.ticks = element_blank()) + 
    theme(plot.margin = unit(rep(0.7, 4), "cm")) + 
    theme(plot.title = element_text(color = "white", family = my_font, size = 25)) + 
    theme(plot.caption = element_text(color = "grey70", family = my_font, size = 15)) + 
    theme(plot.subtitle = element_text(color = "grey70", size = 15)) +
    theme(legend.text = element_text(color = "white", size = 15)) + 
    theme(strip.text = element_text(color = "white", size = 17, face = "bold", family = my_font, hjust = 0.5))


ggsave( glue::glue("fig/나이팅게일.png") , 
        nightingale_g,
        device = ragg::agg_png, 
        width = 297, height = 210, units = "mm", res = 600)

```

![](img/public/%EB%82%98%EC%9D%B4%ED%8C%85%EA%B2%8C%EC%9D%BC.png){fig-align="center" width="707"}
:::

::: aside
-   [위키백과, "플로렌스 나이팅게일"](https://ko.wikipedia.org/wiki/%ED%94%8C%EB%A1%9C%EB%A0%8C%EC%8A%A4_%EB%82%98%EC%9D%B4%ED%8C%85%EA%B2%8C%EC%9D%BC)
-   [위키백과, "크림전쟁"](https://ko.wikipedia.org/wiki/%ED%81%AC%EB%A6%BC_%EC%A0%84%EC%9F%81)
:::

## 회귀분석 - MLB 투수 유전자는 유전이 될까?

![](img/public/major-league.png){fig-align="center"}

::: aside
[회귀분석 - MLB 투수 유전자는 유전이 될까?](https://statkclee.github.io/politics/pe-baseball-era.html)
:::

## 폭격비행기 {.smaller}

```{r download-world-war, eval = FALSE}

europe_names <- glue::glue("Europe_{1939:1945}")
pacific_names <- glue::glue("Pacific_{c(1937, 1939, 1941:1945)}")

for(i in 1:length(europe_names)) {
  # cat(europe_names[i], "\n")
  # download.file(url = glue::glue("http://www.andrewclem.com/War/Maps/{europe_names[i]}.gif"),
  #             destfile = glue::glue("{here::here()}/fig/world_war/{europe_names[i]}.png"), mode = "wb" )
  cat(pacific_names[i], "\n")
  download.file(url = glue::glue("http://www.andrewclem.com/War/Maps/{pacific_names[i]}.gif"),
              destfile = glue::glue("{here::here()}/fig/world_war/{pacific_names[i]}.png"), mode = "wb" )
}
```

```{r make-gif, eval = FALSE}
library(tidyverse)
library(magick)

world_war_files <- fs::dir_ls(path = "fig/world_war", glob = "*.png")

europe_files <- world_war_files[str_detect(world_war_files, "Europe")]
pacific_files <- world_war_files[!str_detect(world_war_files, "Europe")]

## 유럽 전황 
europe_m <- magick::image_read(pacific_files[1])

for (i in 2:length(europe_files)) {
  europe_m <- c(europe_m, magick::image_read(europe_files[i]))
}

europe_ani <- magick::image_animate(europe_m, fps = 1, loop = 0, dispose = "previous")
magick::image_write(europe_ani, "fig/world_war_europe.gif")

## 태평양 전황 
pacific_m <- magick::image_read(pacific_files[1])

for (i in 2:length(pacific_files)) {
  pacific_m <- c(pacific_m, magick::image_read(pacific_files[i]))
}

pacific_ani <- magick::image_animate(pacific_m, fps = 1, loop = 0, dispose = "previous")
magick::image_write(pacific_ani, "fig/world_war_pacific.gif")

```

::: panel-tabset
### 세계대전 - 유럽

![](img/public/world_war_europe.gif)

### 세계대전 - 태평양

![](img/public/world_war_pacific.gif)

### 대공포

<iframe width="560" height="315" src="https://www.youtube.com/embed/48zE-hRAYEA" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen>

</iframe>

### 폭격기 데이터

![](img/public/Survivorship-bias.png){fig-align="center" width="671"}

### 고민

![](img/public/hum_meme.jpg){fig-align="center" width="500"}

### 업그레이드

![](img/public/survivorship_bias_plane.png){fig-align="center" width="1698"}
:::

