{
  "hash": "4138619e5cd58c390bb3133c346e36fe",
  "result": {
    "markdown": "---\ntitle: \"데이터 사이언스와 디자인<br>\"\nsubtitle: \"디자인과 아키텍쳐의 중요성\"\nauthor: \"이광춘 / 한국 R 사용자회\"\ndate: \"2022년 10월 11일\"\nformat:\n  revealjs: \n    theme: [\"simple\", \"theme/q-theme.scss\"]\n    width: 1280\n    height: 720\n    chalkboard: \n      buttons: false\n    preview-links: auto\n    logo: img/koRea_logo.png\n    footer: \"[한국 R 사용자회](https://r2bit.com/)&nbsp;\"\n    code-copy: true\n    center-title-slide: true\n    code-link: true\n    code-overflow: wrap\n    highlight-style: a11y\n    smaller: true\n    scrollable: false\n    slide-number: c/t\n    code-tools:\n      source: true\n      toggle: false\n      caption: none    \nfilters:\n   - lightbox\nlightbox: auto        \n\nexecute: \n  eval: true\n  echo: true\n  freeze: true  \neditor_options: \n  chunk_output_type: console\nbibliography: references.bib\n\nknitr:\n  opts_chunk: \n    echo: true\n    collapse: true\n    comment: \"#>\"    \n---\n\n\n::: column-body-outset\n::: {#fig-hongik layout-ncol=2 layout-valign=\"top\"}\n\n![](fig/Emerging-Creativity-Workshop.png){width=57%}\n\n![](fig/hongik-detail.png){width=57%}\n\n홍익대학교 \"Emerging Creativity Workshop\"\n:::\n:::\n\n# 데이터 과학\n\n## 데이터 사이언스\n\n![](fig/horst-eco-r4ds.png)\n\n## 데이터 과학 욕구단계설\n\n::: panel-tabset\n### 매슬로 욕구단계설\n\n![](fig/pyramid-needs.png)\n\n### 가치 피라미드\n\n![](fig/pyramid-data-science.png)\n:::\n\n\n# 문제\n\n## 데이터 사이언스 - 출판\n\n::: {#fig-hongik layout-ncol=3 layout-valign=\"bottom\"}\n\n![문제점](fig/single-sourcing-problem.jpg)\n\n\n![Single Sourcing 개념](fig/single-sourcing-concept.jpg)\n\n![Single Sourcing Multi-Use](fig/single-sourcing-publishing.jpg)\n\n데이터 사이언스 출판 현황과 방향\n:::\n\n## 복잡성\n\n::: {#fig-hongik layout-ncol=3 layout-valign=\"bottom\"}\n\n![엑셀, [XKCD 1667: Algorithms](https://www.explainxkcd.com/wiki/index.php/1667:_Algorithms)](fig/xkcd-algorithms.png)\n\n![아래한글, [Writing Technical Papers with Markdown and Pandoc](https://blog.kdheepak.com/writing-papers-with-markdown.html)](fig/markdown-writing.png)\n\n![럼스펠트 지식 행렬, [@martin2011beyond]](fig/rumsfeld-matrix.png)\n\n데이터 과학 저작도구 복잡성\n\n:::\n\n\n## 사람 대 기계\n\n::: {#fig-hongik layout-ncol=3 layout-valign=\"bottom\"}\n\n![전체 개발 시간](fig/human-computer-total.png)\n\n![사람 `<` 기계](fig/human-computer-machine.png)\n\n![사람 `>` 기계](fig/human-computer-human.png)\n\n전체 개발시간 중요도 추세\n:::\n\n\n\n\n\n\n# 해법\n\n## Quarto\n\n::: {#fig-hongik layout-ncol=2 layout-valign=\"bottom\"}\n\n![R](fig/quarto_workflow/rmd-knitr.png)\n\n![파이썬](fig/quarto_workflow/jupyter-alone.png)\n\n![Quarto: R](fig/quarto_workflow/qmd-knitr.png)\n\n![Quarto: 파이썬](fig/quarto_workflow/qmd-jupyter.png)\n\n데이터 사이언스 출판 제작 흐름\n:::\n\n\n## 파이프 & 필터\n\n::: panel-tabset\n### 유닉스 쉘\n\n![[파이프와 필터](http://aispiration.com/shell-novice-kr/04-pipefilter/index.html)](fig/redirects-and-pipes.png)\n\n### 그래프 문법\n\n![[그래프 문법 실무](https://aispiration.com/viz/viz-ggplot2-practice.html)](fig/ggplot-pipe-and-filter.png)\n\n### 표 문법\n\n![[한국 R 컨퍼런스 - 발표자 사진 포함](http://aispiration.com/data-science/ds-rconf-profile.html)](fig/gt_parts_of_a_table.svg)\n\n\n### 애니메이션 문법\n\n- [데이터 과학자의 시각화 - 정적 그래프를 넘어 데항해 시대로 (2018/10/19)](http://aispiration.com/ds-authoring/ds_data_scientist_visualization.html#26)\n- [gganimate Talks](https://gganimate.com/articles/extra/talks.html)\n\n<center>\n![](fig/gganimate-logo.png)\n</center>\n\n### 3D 시각화\n\n<center>\n![[rayshader](https://www.rayshader.com/)](fig/rayshader-smallhobart.gif)\n</center>\n\n:::\n\n\n## 시각화 - 그래프 문법 [^problem-3]\n\n[^problem-3]: Comparing ggplot2 and R Base Graphics By [Nathan Yau](https://flowingdata.com/2016/03/22/comparing-ggplot2-and-r-base-graphics/)\n\n::: panel-tabset\n<!-- 데이터  -->\n\n### 데이터\n\n::: columns\n::: column\n#### R 코드\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\nbill_df <- data.frame(\n  sex = factor(c(\"여성\",\"여성\",\"남성\",\"남성\")),\n  time = factor(c(\"점심\",\"저녁\",\"점심\",\"저녁\"), levels=c(\"점심\",\"저녁\")),\n  total_bill = c(13.53, 16.81, 16.24, 17.42)\n)\n```\n:::\n:::\n\n::: column\n#### 실행결과\n\n::: {.cell}\n\n```{.r .cell-code}\nbill_df\n#>    sex time total_bill\n#> 1 여성 점심      13.53\n#> 2 여성 저녁      16.81\n#> 3 남성 점심      16.24\n#> 4 남성 저녁      17.42\n```\n:::\n:::\n:::\n\n<!-- ggplot -->\n### ggplot \n\n::: columns\n::: column\n#### R 코드\n\n::: {.cell}\n\n```{.r .cell-code}\nbill_df %>% \n  ggplot(aes(x=time, y=total_bill, group=sex, shape=sex, colour=sex)) +\n    geom_line(aes(linetype=sex), size=1) +    \n    geom_point(size=3, fill=\"white\") +        \n    expand_limits(y=0) +                      \n    scale_colour_hue(name=\"결재자 성별\", l=30) +\n    scale_shape_manual(name=\"결재자 성별\", values=c(22,21)) +\n    scale_linetype_discrete(name=\"결재자 성별\") +\n    xlab(\"점심, 석식\") + ylab(\"팁(Tip)\") +\n    ggtitle(\"식사 결재 평균 팁\") +    \n    theme_bw() +\n    theme(legend.position=c(.7, .4))\n\n```\n:::\n:::\n\n::: column\n#### 실행결과\n\n::: {.cell}\n::: {.cell-output-display}\n![](index_files/figure-revealjs/unnamed-chunk-4-1.png){width=960}\n:::\n:::\n:::\n:::\n\n<!-- Base R -->\n### Base R\n\n::: columns\n::: column\n#### R 코드\n\n::: {.cell}\n\n```{.r .cell-code}\nbill_mat <- matrix( bill_df$total_bill,\n                   nrow = 2,\n                   byrow=TRUE,\n                   dimnames = list(c(\"여성\", \"남성\"), c(\"점심\", \"저녁\"))\n                   )\n\nmf_col <- c(\"#3CC3BD\", \"#FD8210\")\nbarplot(bill_mat, beside = TRUE, border=NA, col=mf_col)\nlegend(\"topleft\", row.names(bill_mat), pch=15, col=mf_col)\n\n\npar(cex=1.2, cex.axis=1.1)\nmatplot(bill_mat, type=\"b\", lty=1, pch=19, col=mf_col,\n    cex=1.5, lwd=3, las=1, bty=\"n\", xaxt=\"n\",\n    xlim=c(0.7, 2.2), ylim=c(12,18), ylab=\"\",\n    main=\"식사 결재 평균 팁\", yaxt=\"n\")\naxis(2, at=axTicks(2), labels=sprintf(\"$%s\", axTicks(2)),\n    las=1, cex.axis=0.8, col=NA, line = -0.5)\ngrid(NA, NULL, lty=3, lwd=1, col=\"#000000\")\nabline(v=c(1,2), lty=3, lwd=1, col=\"#000000\")\nmtext(\"점심\", side=1, at=1)\nmtext(\"저녁\", side=1, at=2)\ntext(1.5, 17.3, \"남성\", srt=8, font=3)\ntext(1.5, 15.1, \"여성\", srt=33, font=3)\n\n```\n:::\n:::\n\n::: column\n#### 실행결과\n\n::: {.cell}\n::: {.cell-output-display}\n![](index_files/figure-revealjs/unnamed-chunk-6-1.png){width=960}\n:::\n:::\n:::\n:::\n:::\n\n## 디자인 - 코드\n\n::: panel-tabset\n### 데이터 가공\n\n> 날짜와 시간별로 총 빈도수와 출발연착 평균 시간을 구한다. 단, 총빈도수가 10 회 미만인 것은 제외하고 출발연착 시간의 결측값을 제거하고 계산한다.\n\n-   `flights` 데이터프레임에서\n-   출발 연착시간(`dep_delay`) 칼럼에서 결측값이 없는 (`!is.na()`) 행을 필터링 하고\n-   날짜별(`date`), 시간별(`hour`) 그룹을 묶어\n-   평균 출발 연착시간을 계산하고 총빈도수 총계를 내고\n-   총빈도수가 10회 이상인 날짜와 시간을 찾아내시오\n\n### `dplyr` R\n\n::: {.cell}\n\n```{.r .cell-code}\nhourly_delay <- flights %>%  \n  filter(!is.na(dep_delay)) %>% \n  group_by(date, hour) %>% \n  summarise(delay = mean(dep_delay), n = n()) %>%  \n  filter(n > 10) \n```\n:::\n\n### Base R\n\n::: {.cell}\n\n```{.r .cell-code}\nhourly_delay <- filter(   \n    summarise(   \n        group_by(   \n             filter(   \n                 flights,    \n                 !is.na(dep_delay)   \n             ),    \n             date, hour   \n        ),    \n    delay = mean(dep_delay),    \n         n = n()   \n    ),    \n    n > 10   \n)\n```\n:::\n\n### SQL\n\n::: {.cell}\n\n```{.sql .cell-code}\nSELECT \"date\", \"hour\", \"delay\", \"n\"\nFROM (\n    SELECT \"date\", \"hour\",\n        AVG(\"dep_delay\") AS \"delay\",\n        COUNT() AS \"n\"\n    FROM \"flights\"\n    WHERE NOT(\"dep_delay\" IS NULL)\n    GROUP BY \"date\", \"hour\"\n) AS \"_W1\"\nWHERE \"n\" > 10.0\n```\n:::\n\n### 파이썬\n\n::: {.cell}\n\n```{.python .cell-code}\nflights[['date','hour','dep_delay']]\n...\n```\n:::\n:::\n\n## 디자인 - 데이터\n\n::: panel-tabset\n### 정돈된 데이터\n\n<center>![](fig/messy_tidy_data.png){width=\"1000\"}</center>\n\n### 사례 - 결핵 데이터\n\n-   WHO [결핵 원데이터](http://www.who.int/tb/country/data/download/en/)\n-   WHO 에서 년도별, 국가별, 연령별, 성별, 진단방법별 결핵 발병사례 조사 통계 데이터\n-   진단방법\n    -   `rel` stands for cases of relapse\n    -   `ep` stands for cases of extrapulmonary TB\n    -   `sn` stands for cases of pulmonary TB that could not be diagnosed by a pulmonary smear (smear negative)\n    -   `sp` stands for cases of pulmonary TB that could be diagnosed by a pulmonary smear (smear positive)\n-   연령\n    -   014 = 0 -- 14 years old\n    -   1524 = 15 -- 24 years old\n    -   2534 = 25 -- 34 years old\n    -   3544 = 35 -- 44 years old\n    -   4554 = 45 -- 54 years old\n    -   5564 = 55 -- 64 years old\n    -   65 = 65 or older\n-   성별\n    -   males (m)\n    -   females (f)\n\n### 사례 - Messy 데이터\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\ntidyr::who \n#> # A tibble: 7,240 × 60\n#>    country  iso2  iso3   year new_sp_m014 new_sp_m1524 new_sp_m2534 new_sp_m3544\n#>    <chr>    <chr> <chr> <dbl>       <dbl>        <dbl>        <dbl>        <dbl>\n#>  1 Afghani… AF    AFG    1980          NA           NA           NA           NA\n#>  2 Afghani… AF    AFG    1981          NA           NA           NA           NA\n#>  3 Afghani… AF    AFG    1982          NA           NA           NA           NA\n#>  4 Afghani… AF    AFG    1983          NA           NA           NA           NA\n#>  5 Afghani… AF    AFG    1984          NA           NA           NA           NA\n#>  6 Afghani… AF    AFG    1985          NA           NA           NA           NA\n#>  7 Afghani… AF    AFG    1986          NA           NA           NA           NA\n#>  8 Afghani… AF    AFG    1987          NA           NA           NA           NA\n#>  9 Afghani… AF    AFG    1988          NA           NA           NA           NA\n#> 10 Afghani… AF    AFG    1989          NA           NA           NA           NA\n#> # ℹ 7,230 more rows\n#> # ℹ 52 more variables: new_sp_m4554 <dbl>, new_sp_m5564 <dbl>,\n#> #   new_sp_m65 <dbl>, new_sp_f014 <dbl>, new_sp_f1524 <dbl>,\n#> #   new_sp_f2534 <dbl>, new_sp_f3544 <dbl>, new_sp_f4554 <dbl>,\n#> #   new_sp_f5564 <dbl>, new_sp_f65 <dbl>, new_sn_m014 <dbl>,\n#> #   new_sn_m1524 <dbl>, new_sn_m2534 <dbl>, new_sn_m3544 <dbl>,\n#> #   new_sn_m4554 <dbl>, new_sn_m5564 <dbl>, new_sn_m65 <dbl>, …\n```\n:::\n\n### 사례 - 코드\n\n::: {.cell}\n\n```{.r .cell-code}\nwho %>%\n  pivot_longer(\n    cols = new_sp_m014:newrel_f65, \n    names_to = \"key\", \n    values_to = \"cases\", \n    values_drop_na = TRUE\n  ) %>% \n  mutate(\n    key = stringr::str_replace(key, \"newrel\", \"new_rel\")\n  ) %>%\n  separate(key, c(\"new\", \"var\", \"sexage\")) %>% \n  select(-new, -iso2, -iso3) %>% \n  separate(sexage, c(\"sex\", \"age\"), sep = 1)\n```\n:::\n\n### 사례 - Tidy 데이터\n\n::: {.cell}\n\n```\n#> # A tibble: 76,046 × 6\n#>    country      year var   sex   age   cases\n#>    <chr>       <dbl> <chr> <chr> <chr> <dbl>\n#>  1 Afghanistan  1997 sp    m     014       0\n#>  2 Afghanistan  1997 sp    m     1524     10\n#>  3 Afghanistan  1997 sp    m     2534      6\n#>  4 Afghanistan  1997 sp    m     3544      3\n#>  5 Afghanistan  1997 sp    m     4554      5\n#>  6 Afghanistan  1997 sp    m     5564      2\n#>  7 Afghanistan  1997 sp    m     65        0\n#>  8 Afghanistan  1997 sp    f     014       5\n#>  9 Afghanistan  1997 sp    f     1524     38\n#> 10 Afghanistan  1997 sp    f     2534     36\n#> # ℹ 76,036 more rows\n```\n:::\n:::\n\n\n# 디자인과 아키텍처\n\n## 윈텔 아키텍처\n\n<br>\n\n::: {#fig-wintel layout-ncol=4 layout-valign=\"bottom\"}\n\n![](fig/computer-01.png){width=70%}\n\n![](fig/computer-02.png){width=70%}\n\n![](fig/computer-03.png){width=70%}\n\n![](fig/computer-04.png){width=70%}\n\n마이크로소프트 + 인텔 아키텍처\n\n:::\n\n## 과학기술 컴퓨팅\n\n::: {#fig-thinking layout-ncol=3 layout-valign=\"bottom\"}\n\n![추상화](fig/abstraction-thinking.png)\n\n![자동화](fig/automation.png)\n\n![과학적 방법론](fig/Scientific-Method.png) \n\n과학기술 방법론\n\n:::\n\n\n## 코딩\n\n<br>\n\n::: {#fig-software layout-ncol=3 layout-valign=\"bottom\"}\n\n![프로그래밍 언어](fig/programming-languages.jpeg) \n\n![프레임워크](fig/framework.png) \n\n![프로그래밍 패러다임](fig/programming-paradigms.jpg)\n\n:::\n\n## 엔지니어링\n\n<br>\n\n:::: {.columns}\n\n::: {.column width=\"50%\"}\n![과학적 방법론](fig/Scientific-Method.png) \n:::\n\n::: {.column width=\"50%\"}\n\n- ### **반복**: iteration <br>\n<br>\n- ### **피드백**: feedback <br> \n<br>\n- ### **점진적**: incremental <br>\n<br>\n- ### **실험**: experimental <br>\n<br>\n- ### **경험적**: empirical <br>\n<br>\n\n:::\n::::\n\n\n## 복잡성 &uarr; &rarr; 가치 &uarr;\n\n<br>\n\n:::: {.columns}\n\n::: {.column width=\"50%\"}\n#### Tidyverse API 원칙\n\n- ### 기존 자료구조를 재사용: Reuse existing data structures.\n<br>\n- ### 파이프 연산자로 간단한 함수를 조합: Compose simple functions with the pipe.\n<br>\n- ### 함수형 프로그래밍을 적극 사용: Embrace functional programming.\n<br>\n- ### 기계가 아닌 인간을 위한 설계: Design for humans.\n<br>\n\n:::\n\n::: {.column width=\"50%\"}\n#### 설계와 디자인 원칙 [@Farley2022]\n\n- ### **모듈화**: modularity <br>\n<br>\n- ### **정보 은닉**: information hiding <br> \n<br>\n- ### **관심사 분리**: separation of concerns <br>\n<br>\n- ### **낮은 결합도**: loosely coupling <br>\n<br>\n- ### **높은 응집도**: high cohesion <br>\n<br>\n\n:::\n::::\n\n\n## 데이터 과학 세상\n\n\n![](fig/tidyverse-endgame.png){width=77%}\n\n\n\n# RStudio &rarr; Posit\n\n## R\n\n::: panel-tabset\n### R 코드\n\n![](fig/rstudio/R_Screenshot.png){width=60%}\n\n### R 스크립트\n\n![](fig/rstudio/R_script.png){width=60%}\n\n### LaTeX + R\n\n![](fig/rstudio/LaTex_R.jpg){width=60%}\n\n### IDE\n\n![](fig/rstudio/rstudio_session_4pane_layout.png){width=60%}\n\n### Posit\n\n<br>\n  \n::: {layout-ncol=2}\n\n![](fig/rstudio/visual-markdown-editor-tips.webp)\n\n![](fig/rstudio/modify-image-size-in-visual-markdown-editor.webp)\n:::\n  \n### 과학기술 SW\n  \n  \n![](fig/rstudio/posit-trend.png){width=80%}\n\n- **재현성**: 다른 사람 저작 소프트웨어를 내가 실행할 수 있나?\n- **회복성**: 소프트웨어가 망하게 되면 대안은 있는가?\n- **참여**: 방법론을 결정하는데 참여할 수 있나?\n  \n### 재현성\n  \n:::: {.columns}\n\n::: {.column width=\"40%\"}\n\n![](fig/reproducible-matrix.jpg)\n\n:::\n  \n::: {.column width=\"60%\"}\n\n- **Reproducible**: A result is reproducible when the same analysis steps performed on the same dataset consistently produces the same answer.\n\n- **Replicable**: A result is replicable when the same analysis performed on different datasets produces qualitatively similar answers.\n\n- **Robust**: A result is robust when the same dataset is subjected to different analysis workflows to answer the same research question (for example one pipeline written in R and another written in Python) and a qualitatively similar or identical answer is produced. Robust results show that the work is not dependent on the specificities of the programming language chosen to perform the analysis.\n\n- **Generalisable**: Combining replicable and robust findings allow us to form generalisable results. [@turing-2022]\n<!-- Note that running an analysis on a different software implementation and with a different dataset does not provide generalised results. There will be many more steps to know how well the work applies to all the different aspects of the research question. Generalisation is an important step towards understanding that the result is not dependent on a particular dataset nor a particular version of the analysis pipeline. -->\n  \n:::\n\n::::\n  \n### 재현성 상세\n  \n![[@Peng2011]](fig/reproducibility-spectrum.png)\n\n\n### Compendium\n\n![[@Marwick2018]](fig/compendium.png){width=80%}\n\n:::\n  \n\n# 사례\n\n- [한국 R 사용자회](https://github.com/bit2r/bit2r.github.io)\n\n- [한국 R 컨퍼런스](https://github.com/tidyverse-korea/rconf)\n\n- [코로나 19 프로젝트](http://code-states.netlify.app/)\n\n## 참고문헌\n\n::: {#refs}\n:::\n\n\n    \n    \n\n##  {background-image=\"fig/slide-end.png\" background-size=\"contain\"}\n\n",
    "supporting": [
      "index_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-after-body": [
        "\r\n<script>\r\n  // htmlwidgets need to know to resize themselves when slides are shown/hidden.\r\n  // Fire the \"slideenter\" event (handled by htmlwidgets.js) when the current\r\n  // slide changes (different for each slide format).\r\n  (function () {\r\n    // dispatch for htmlwidgets\r\n    function fireSlideEnter() {\r\n      const event = window.document.createEvent(\"Event\");\r\n      event.initEvent(\"slideenter\", true, true);\r\n      window.document.dispatchEvent(event);\r\n    }\r\n\r\n    function fireSlideChanged(previousSlide, currentSlide) {\r\n      fireSlideEnter();\r\n\r\n      // dispatch for shiny\r\n      if (window.jQuery) {\r\n        if (previousSlide) {\r\n          window.jQuery(previousSlide).trigger(\"hidden\");\r\n        }\r\n        if (currentSlide) {\r\n          window.jQuery(currentSlide).trigger(\"shown\");\r\n        }\r\n      }\r\n    }\r\n\r\n    // hookup for slidy\r\n    if (window.w3c_slidy) {\r\n      window.w3c_slidy.add_observer(function (slide_num) {\r\n        // slide_num starts at position 1\r\n        fireSlideChanged(null, w3c_slidy.slides[slide_num - 1]);\r\n      });\r\n    }\r\n\r\n  })();\r\n</script>\r\n\r\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}