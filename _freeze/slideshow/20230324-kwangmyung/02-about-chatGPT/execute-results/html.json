{
  "hash": "d9e3db084582a40fedba904e09142ade",
  "result": {
    "markdown": "---\ntitle: '`chatGPT`'\n---\n\n\n\n## chatGPT 란?\n\n::: panel-tabset\n\n### PNG와 JPEG\n\n![](../../img/png_jpg.png){width=\"651\"}\n\n::: aside\n자료출처: [Ted Chiang (February 9, 2023), \"ChatGPT Is a Blurry JPEG of the Web - OpenAI's chatbot offers paraphrases, whereas Google offers quotes. Which do we prefer?\", The New Yorker](https://www.newyorker.com/tech/annals-of-technology/chatgpt-is-a-blurry-jpeg-of-the-web)\n:::\n\n### Foundation 모형\n\n![](../../img/foundation_model.png){width=\"500\"}\n:::\n\n\n## 거대 언어모형(LLM) \n\n\n:::{.panel-tabset}\n\n## LLM 진화\n\n![](../../img/LLM_tree.gif)\n\n## 80억 패러미터\n\n![](../../img/LLM_tree_8_billion.png)\n\n## 400억 \n\n![](../../img/LLM_tree_40_billion.png)\n\n## 640억 \n\n![](../../img/LLM_tree_62_billion.png)\n\n\n## 5,400억 \n\n![](../../img/LLM_tree_540_billion.png)\n\n## 성능\n\n![](../../img/LLM_tree_performance.png)\n\n:::\n\n\n::: aside\n[[Sharan Narang and Aakanksha Chowdhery (APRIL 04, 2022), \"Pathways Language Model (PaLM): Scaling to 540 Billion Parameters for Breakthrough Performance\", Software Engineers, Google Research](https://ai.googleblog.com/2022/04/pathways-language-model-palm-scaling-to.html)]{.aside}\n:::\n\n##  {background-image=\"../../img/question.jpg\"}\n\n::: r-fit-text\n[실습: 코딩]{style=\"color: red; font-size:92px;\"}\n:::\n\n## 삼성전자 주가 예측 {.smaller}\n\n::: panel-tabset\n\n### 개요\n\n![](../../img/samsung_codex.jpg)\n\n### 크롤링: 지시명령어\n\n> 파이썬으로 최근 3년간 삼성전자 주가 데이터를 크롤링하여 samsung.csv 파일로 저장하는 코드를 작성해 주세요.\n\n\n### 크롤링: 코드\n\n\n::: {.cell source-line-numbers='14,46,39,49' execution_count=1}\n``` {.python .cell-code code-line-numbers=\"true\"}\nimport requests\nimport pandas as pd\n\n# URL of Samsung Electronics stock historical data\nurl = \"https://finance.naver.com/item/sise_day.naver?code=005930&page=\"\n\n# Empty list to store stock price data\ndata = []\n\n# Loop through the last 3 years of pages (60 pages in total)\nfor page in range(1, 61):\n    # Send a GET request to the URL with the current page number\n    response = requests.get(url + str(page), headers={'User-agent': 'Mozilla/5.0'})\n    \n\n    # Check if the response is successful\n    if response.status_code == 200:\n        # Read the HTML table into a pandas dataframe\n        df_list = pd.read_html(response.text, flavor='html5lib')\n\n        # Check if the list of dataframes is not empty\n        if df_list:\n            # Get the first dataframe\n            df = df_list[0]\n\n            # Drop the last row which is just a duplicate of the column headers\n            df = df.drop(len(df) - 1)\n\n            # Append the dataframe to the list\n            data.append(df)\n\n# Concatenate all dataframes into a single dataframe\ndf = pd.concat(data)\n\n# Reverse the order of rows to start from the earliest date\ndf = df.iloc[::-1]\n\ndf = df.dropna()\n\n# Set the date column as the index and remove unnecessary columns\ndf = df.set_index('날짜')[['종가', '거래량']]\n\n# Convert the data types of columns to float and int\ndf['종가'] = df['종가'].astype(float)\ndf['거래량'] = df['거래량'].astype(int)\n\n# Save the dataframe as a CSV file\ndf.to_csv('data/samsung.csv')\n\n# Print a confirmation message\nprint('samsung.csv saved successfully.')\n```\n:::\n\n\n### 상세 바로가기\n\n<br>\n<br>\n<br>\n<br>\n<br>\n\n::: r-fit-text\n\n[[chatGPT - 삼성전자 주가예측](https://r2bit.com/chatGPT/samsung.html)]{style=\"color: blue; font-size:77px;\"}\n:::\n\n\n:::\n\n",
    "supporting": [
      "02-about-chatGPT_files"
    ],
    "filters": [],
    "includes": {}
  }
}