{
  "hash": "bf966dc4b5d7b135439912fba7eef2b9",
  "result": {
    "markdown": "---\ntitle: \"파머 펭귄\"\nsubtitle: \".csv 파일 (영어)\"\nformat: \n  html:\n    toc: true\n    echo: false\n    keep-hidden: true\n    code-tools: true\neditor_options: \n  chunk_output_type: console\n---\n\n\n\n![](fig/interactive-workflow.png)\n\n# 파머 펭귄 (국문)\n\n## 데이터 패키지\n\nR 혹은 파이썬에서 데이터를 바로 생성시키고 이를 인터랙티브 시각화에 사용하는 방식도 존재한다. 마찬가지로 외부 데이터 패키지 [`bitData`](https://github.com/bit2r/bitData) 에서 R 환경에서 데이터를 적재시키고 이를 인터랙티브 시각화에 사용하는 방식도 있다.\n\n\n\n::: {.cell warning.hidden='true' message.hidden='true'}\n\n```{.r .cell-code .hidden}\nlibrary(tidyverse)\n\nnormal_values <- rnorm(1000)\n\nnormal_data <- normal_values %>% \n  as_tibble()\n\nojs_define(normal_data = normal_data)\n```\n:::\n\n\n\n# 파머 펭귄 (국문)\n\n## 데이터\n\n[`bitData`](https://github.com/bit2r/bitData) 데이터 패키지 내장된 파머 펭귄 데이터를 번역한 `penguins` 데이터프레임을 `palmer-penguins-korean.csv` 파일로 저장시킨다.\n\n\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\nlibrary(tidyverse)\n\nbitData::penguins  %>% \n  write_csv(\"data/palmer-penguins-korean.csv\")\n```\n:::\n\n```{ojs}\nkdata = FileAttachment(\"../data/palmer-penguins-korean.csv\").csv({ typed: true })\n```\n\n\nUI에서 입력값을 선택하면서 시각화하는 데이터가 달라지기 때문에 이를 반영하여 인터랙티브 대상 시각화 데이터를 제작한다.\n\n\n```{ojs}\nkfiltered = kdata.filter(function(penguin) {\n  return bill_length_min < penguin.부리_길이 &&\n         섬이름.includes(penguin.섬이름);\n})\n```\n\n\n\n## UI\n\n인터랙티브 데이터 시각화를 위해서 UI 입력부분을 정의한다. 먼저 슬라이더 입력값(`Input.range()`) 과 체크박스 입력값(`Inputs.checkbox()`)을 넣어둔다.\n\n\n```{ojs}\n//| panel: input\nviewof bill_length_min = Inputs.range(\n  [32, 50], \n  {value: 35, step: 1, label: \"부리 길이 (최소):\"}\n)\nviewof islands = Inputs.checkbox(\n  [\"토르거센\", \"비스코\", \"드림\"], \n  { value: [\"토르거센\", \"비스코\"], \n    label: \"섬이름:\"\n  }\n)\n```\n\n\n## 인터랙티브 그래프\n\n인터랙티브 데이터를 선택한 결과를 실시간 데이터와 그래프로 시각화하여 문서에 담아낸다.\n\n::: {.panel-tabset}\n\n### 시각화\n\n\n```{ojs}\nPlot.rectY(kfiltered, \n  Plot.binX(\n    {y: \"count\"}, \n    {x: \"체중\", fill: \"종명칭\", thresholds: 20}\n  ))\n  .plot({\n    facet: {\n      data: filtered,\n      x: \"성별\",\n      y: \"종명칭\",\n      marginRight: 80\n    },\n    marks: [\n      Plot.frame(),\n    ]\n  }\n)\n```\n\n\n### 표\n\n\n```{ojs}\nInputs.table(filtered)\n```\n\n\n:::\n\n\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}